// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@import "global";

$include-html-type-classes: $include-html-classes !default;

// We use these to control header font styles
$header-font-family: $body-font-family !default;
$header-font-weight: $font-weight-normal !default;
$header-font-style: normal !default;
//RDC: $header-font-color pari a $body-font-color. OLD: $header-font-color:$jet !default;
$header-font-color: $body-font-color !default;
//RDC:$header-line-height pari a $base-line-height OLD: $header-line-height: 1.4 !default;
$header-line-height: $base-line-height !default;


//RDC: $header-top-margin:0 anzichè .2rem (original); $header-bottom-margin: rem-calc(20) anzichè .5rem (original)
$header-top-margin: 0 !default;
$header-bottom-margin: rem-calc(20) !default;
$header-text-rendering: optimizeLegibility !default;

// We use these to control header font sizes
$h1-font-size: rem-calc(44) !default;
$h2-font-size: rem-calc(37) !default;
$h3-font-size: rem-calc(27) !default;
$h4-font-size: rem-calc(23) !default;
$h5-font-size: rem-calc(18) !default;
$h6-font-size: 1rem !default;   

// We use these to control header size reduction on small screens
$h1-font-reduction: rem-calc(10) !default;
$h2-font-reduction: rem-calc(10) !default;
$h3-font-reduction: rem-calc(5) !default;
$h4-font-reduction: rem-calc(5) !default;
$h5-font-reduction: 0 !default;
$h6-font-reduction: 0 !default;

// These control how subheaders are styled.
$subheader-line-height: 1.4 !default;
$subheader-font-color: scale-color($header-font-color, $lightness: 35%) !default;
$subheader-font-weight: $font-weight-normal !default;

//RDC: $subheader-top-margin:0 anzichè .2rem (original); $subheader-bottom-margin: rem-calc(20) anzichè .5rem (original)
$subheader-top-margin: 0!default;
$subheader-bottom-margin: rem-calc(20) !default;

// A general <small> styling
// RDC: $small-font-size incrementato da 60% a 80%
$small-font-size: 80% !default;
$small-font-color: scale-color($header-font-color, $lightness: 35%) !default;

// We use these to style paragraphs
$paragraph-font-family: inherit !default;
$paragraph-font-weight: $font-weight-normal !default;
//RDC riscrivo $paragraph-font-size in modo da legarlo a $base-font-size. OLD: 1rem !default
$paragraph-font-size:  rem-calc($base-font-size) !default;

//RDC: metto $paragraph-line-height pari a $base-line-height  
//RDC: OLD $paragraph-line-height: 1.6 !default;
$paragraph-line-height: $base-line-height !default;

$paragraph-margin-bottom: rem-calc(20) !default;
$paragraph-aside-font-size: rem-calc(14) !default;
$paragraph-aside-line-height: 1.35 !default;
$paragraph-aside-font-style: italic !default;
$paragraph-text-rendering: optimizeLegibility !default;

// We use these to style <code> tags
$code-color: $oil !default;
$code-font-family: $font-family-monospace !default;
$code-font-weight: $font-weight-normal !default;
$code-background-color: scale-color($secondary-color, $lightness: 70%) !default;
$code-border-size: 1px !default;
$code-border-style: solid !default;
$code-border-color: scale-color($code-background-color, $lightness: -10%) !default;
$code-padding: rem-calc(2) rem-calc(5) rem-calc(1) !default;

// We use these to style anchors
$anchor-text-decoration: none !default;
$anchor-text-decoration-hover: none !default;
$anchor-font-color: $primary-color !default;
$anchor-font-color-hover: scale-color($anchor-font-color, $lightness: -14%) !default;

// We use these to style the <hr> element
$hr-border-width: 1px !default;
$hr-border-style: solid !default;
$hr-border-color: $gainsboro !default;
$hr-margin: rem-calc(20) !default;

// We use these to style lists
$list-font-family: $paragraph-font-family !default;
$list-font-size: $paragraph-font-size !default;
$list-line-height: $paragraph-line-height !default;
$list-margin-bottom: $paragraph-margin-bottom !default;
$list-style-position: outside !default;
$list-side-margin: 1.1rem !default;
$list-ordered-side-margin: 1.4rem !default;
$list-side-margin-no-bullet: 0 !default;
$list-nested-margin: rem-calc(20) !default; 
$definition-list-header-weight: $font-weight-bold !default;
$definition-list-header-margin-bottom: .3rem !default;
$definition-list-margin-bottom: rem-calc(12) !default;

// We use these to style blockquotes
$blockquote-font-color: scale-color($header-font-color, $lightness: 35%) !default;
$blockquote-padding: rem-calc(9 20 0 19) !default;
$blockquote-border: 1px solid $gainsboro !default;
$blockquote-cite-font-size: rem-calc(13) !default;
$blockquote-cite-font-color: scale-color($header-font-color, $lightness: 23%) !default;
$blockquote-cite-link-color: $blockquote-cite-font-color !default;

// Acronym styles
$acronym-underline: 1px dotted $gainsboro !default;

// We use these to control padding and margin
$microformat-padding: rem-calc(10 12) !default;
$microformat-margin: rem-calc(0 0 20 0) !default;

// We use these to control the border styles
$microformat-border-width: 1px !default;
$microformat-border-style: solid !default;
$microformat-border-color: $gainsboro !default;

// We use these to control full name font styles
$microformat-fullname-font-weight: $font-weight-bold !default;
$microformat-fullname-font-size: rem-calc(15) !default;

// We use this to control the summary font styles
$microformat-summary-font-weight: $font-weight-bold !default;

// We use this to control abbr padding
$microformat-abbr-padding: rem-calc(0 1) !default;

// We use this to control abbr font styles
$microformat-abbr-font-weight: $font-weight-bold !default;
$microformat-abbr-font-decoration: none !default;

// Text alignment class names
$align-class-names:
  small-only,
  small,
  medium-only,
  medium,
  large-only,
  large,
  xlarge-only,
  xlarge,
  xxlarge-only,
  xxlarge;

// Text alignment breakpoints
$align-class-breakpoints:
  $small-only,
  $small-up,
  $medium-only,
  $medium-up,
  $large-only,
  $large-up,
  $xlarge-only,
  $xlarge-up,
  $xxlarge-only,
  $xxlarge-up;

// Generates text align and justify classes
@mixin align-classes{
.text-left    { text-align: left !important; }
.text-right   { text-align: right !important; }
.text-center  { text-align: center !important; }
.text-justify { text-align: justify !important; }

  @for $i from 1 through length($align-class-names) {
    @media #{(nth($align-class-breakpoints, $i))} {
      .#{(nth($align-class-names, $i))}-text-left { text-align: left !important; }
      .#{(nth($align-class-names, $i))}-text-right   { text-align: right !important; }
      .#{(nth($align-class-names, $i))}-text-center  { text-align: center !important; }
      .#{(nth($align-class-names, $i))}-text-justify { text-align: justify !important; }
}
  }
}

//
// Typography Placeholders
//

// These will throw a deprecation warning if used within a media query.
@mixin lead {
  font-size: $paragraph-font-size + rem-calc(3.5);
  line-height: 1.6;
}

@mixin subheader {
  line-height: $subheader-line-height;
  color: $subheader-font-color;
  font-weight: $subheader-font-weight;
  margin-top: $subheader-top-margin;
  margin-bottom: $subheader-bottom-margin;
}
@include exports("type") {
  @if $include-html-type-classes {
    // Responsive Text alignment
    @include align-classes;

    // Typography resets
//RDC: a cosa servono? li elimino!    

//    div,
//    dl,
//    dt,
//    dd,
//    ul,
//    ol,
//    li,
//    h1,
//    h2,
//    h3,
//    h4,
//    h5,
//    h6,
//    pre,
//    form,
//    p,
//    blockquote,
//    th,
//    td {
//      margin:0;
//      padding:0;
//    }


    // Default Link Styles
    a {
      color: $anchor-font-color;
      //RDC: lo escludo se è underscore
      @if $anchor-text-decoration != underscore {
        text-decoration: $anchor-text-decoration;
      }
      line-height: inherit;

      &:hover,
      &:focus {
        color: $anchor-font-color-hover;
        @if $anchor-text-decoration-hover != $anchor-text-decoration {
        	text-decoration: $anchor-text-decoration-hover;
        }
      }

      img { border:none; }
    }

    // Default paragraph styles
    //RDC: utilizzo degli @if per escludere quelli che dovrebbero essere stili di default!
    p {

      @if $paragraph-font-family != inherit {
        font-family: $paragraph-font-family;
      }
      @if $paragraph-font-weight != normal {
        font-weight: $paragraph-font-weight;
      } 
      
      @if $paragraph-font-size != rem-calc($base-font-size) {      
      	font-size: $paragraph-font-size;
			}
			      
      @if $paragraph-line-height != $base-line-height {
        line-height: $paragraph-line-height;
      }
      //RDC: Original: margin-bottom: $paragraph-margin-bottom;
      margin: 0 0 $paragraph-margin-bottom 0;
      text-rendering: $paragraph-text-rendering;

      &.lead { @include lead; }

      //RDC non mi pare faccia molto al momento...per ora lo elimino
      // & aside {
      //  font-size: $paragraph-aside-font-size;
      //  line-height: $paragraph-aside-line-height;
      //  font-style: $paragraph-aside-font-style;
      // }
    }

    // Default header styles
    //RDC: utilizzo degli @if per escludere quelli che dovrebbero essere stili di default!
    h1, h2, h3, h4, h5, h6 {

      @if $header-font-family != $body-font-family {
        font-family: $header-font-family;
      }
      font-weight: $header-font-weight;
      @if $header-font-style != normal {
        font-style: $header-font-style;
      }
      @if $header-font-color != $body-font-color {
        color: $header-font-color;
      }
      text-rendering: $header-text-rendering;
      //RDC: riscrivo con una short
      //margin-top: $header-top-margin;
      //margin-bottom: $header-bottom-margin;
      margin: $header-top-margin 0 $header-bottom-margin 0;
      @if $header-line-height != $base-line-height {
        line-height: $header-line-height;
      }
      small {
        font-size: $small-font-size;
        color: $small-font-color;
        line-height: 0;
      }
    }

    h1 { font-size: $h1-font-size - $h1-font-reduction; }
    h2 { font-size: $h2-font-size - $h2-font-reduction; }
    h3 { font-size: $h3-font-size - $h3-font-reduction; }
    h4 { font-size: $h4-font-size - $h4-font-reduction; }
    h5 { font-size: $h5-font-size - $h5-font-reduction; }
    h6 { font-size: $h6-font-size - $h6-font-reduction; }

    .subheader { @include subheader; }

    hr {
      border: $hr-border-style $hr-border-color;
      border-width: $hr-border-width 0 0;
      clear: both;
      margin: $hr-margin 0 ($hr-margin - rem-calc($hr-border-width));
      height: 0;
    }

    // Helpful Typography Defaults
    em,
    i {
      font-style: italic;
      line-height: inherit;
    }

    strong,
    b {
      //RDC: già compreso in normalizer
      // font-weight: $font-weight-bold;;  
      line-height: inherit;
    }

    small {
      font-size: $small-font-size;
      line-height: inherit;
    }

    code {
      font-family: $code-font-family;
      //RDC: solo se ncessario
      @if $code-font-weight != normal {      
      	font-weight: $code-font-weight;
      } 
      //RDC: solo se ncessario
			@if $code-color != $body-font-color {
				color: $code-color;
			}
      background-color: $code-background-color;      
      border-width: $code-border-size;
      border-style: $code-border-style;
      border-color: $code-border-color;
      
      //RDC: solo se ncessario
      @if $code-padding != 0 {
				padding: $code-padding;	
			}
    }    
    
    
    

    // Lists
    ul,
    ol,
    dl {
      
      //RDC: aggiungo $list-font-family, $list-font-size, $list-line-height se necessario
      // Nota che le questi confronti non vengono fatti sulle definizioni delle variabili, ma con le stesse di $paragraph-qualcosa
      @if $list-font-size != rem-calc($base-font-size) {
        font-size: $list-font-size;
      }
      @if $list-font-family != inherit {
        font-family: $list-font-family;
      }
      @if $list-line-height != $base-line-height {
        line-height: $list-line-height;
      }
      
      //RDC: riscrivo margin con una short

      //RDC: old: margin-bottom: $list-margin-bottom;
      margin: 0 0 $list-margin-bottom 0;
      list-style-position: $list-style-position;

      //RDC: aggiungo
      padding:0;    
    }

    ul {
      margin-#{$default-float}: $list-side-margin;
      &.no-bullet {
        margin-#{$default-float}: $list-side-margin-no-bullet;
        li {
          ul,
          ol {
            margin-#{$default-float}: $list-nested-margin;
            margin-bottom: 0;
            list-style: none;
          }
        }
      }
    }

    // Unordered Lists
    ul {
      li {
        ul,
        ol {
          margin-#{$default-float}: $list-nested-margin;
          margin-bottom: 0;
        }
      }
      &.square,
      &.circle,
      &.disc {
        li ul { list-style: inherit; }
      }

      &.square { list-style-type: square; margin-#{$default-float}: $list-side-margin;}
      &.circle { list-style-type: circle; margin-#{$default-float}: $list-side-margin;}
      &.disc { list-style-type: disc; margin-#{$default-float}: $list-side-margin;}
      &.no-bullet { list-style: none; }
    }

    // Ordered Lists
    ol {
      //RDC: aggiungo un "vero" incremento
      counter-reset:gerarchia; 
      list-style: none; 
      //RDC resetto il margine, avendo messo come numeri un counter
      //RDC: OLD margin-#{$default-float}: $list-ordered-side-margin;  
      margin-#{$default-float}: 0;
      li {
        ul,
        ol {
          margin-#{$default-float}: $list-nested-margin;
          margin-bottom: 0;
        }

        @if $text-direction == ltr {
          &:before {
            content: counters(gerarchia,"."); 
            counter-increment: gerarchia; 
            font-size: 90%;
            padding-right: 6px; 
            color: lighten($body-font-color,23%) 
          } 
        } @else {
          &:after {
            content: counters(gerarchia,"."); 
            counter-increment: gerarchia; 
            font-size: 90%;
            padding-left: 6px; 
            color: lighten($body-font-color,23%) 
          } 
        }
      }
    }
    //RDC: aggiungo questi
    nav ul,
    nav ol {
      padding: 0;
      margin: 0;
      list-style: none;
      list-style-image: none;
    }

    // Definition Lists
    dl {
      dt {
        margin-bottom: $definition-list-header-margin-bottom;
        font-weight: $definition-list-header-weight;
      }
      dd { 
        //RDC: sostituisco questo a margin-bottom
        margin: 0 0 $definition-list-margin-bottom 0;
        //RDC: old margin-bottom: $definition-list-margin-bottom; 
      }
    }

    //RDC
    //Aggiungo un dl-horizontal come quella di bootstrap, con una media query

    @media #{$medium-up} {
      .dl-horizontal {
        @include clearfix;
        dt {
          float: #{$default-float};
          clear: #{$default-float};
          width: 8rem;
          text-align: #{$opposite-direction};
          @include text-overflow; 
        }
        dd {
          margin-#{$default-float}: 10rem;
        }
      }
    }

    // Abbreviations
    abbr,
    acronym {
      text-transform: uppercase;
      font-size: 90%;
      color: $body-font-color;
      cursor: $cursor-help-value;
    }
    abbr {
      text-transform: none;
      &[title] {
        border-bottom: $acronym-underline;
      }      
    }

    // Blockquotes
    blockquote {
      margin: 0 0 $paragraph-margin-bottom;
      padding: $blockquote-padding;
      border-#{$default-float}: $blockquote-border;

      cite {
        display: block;
        font-size: $blockquote-cite-font-size;
        color: $blockquote-cite-font-color;
        &:before {
          content: "\2014 \0020";
        }

        a,
        a:visited {
          color: $blockquote-cite-link-color;
        }
      }
    }
    blockquote,
    blockquote p {
      line-height: $paragraph-line-height;
      color: $blockquote-font-color;
    }

    // Microformats
    .vcard {
      display: inline-block;
      margin: $microformat-margin;
      border: $microformat-border-width $microformat-border-style $microformat-border-color;
      padding: $microformat-padding;

      li {
        margin: 0;
        display: block;
      }
      .fn {
        font-weight: $microformat-fullname-font-weight;
        font-size: $microformat-fullname-font-size;
      }
    }

    .vevent {
      .summary { font-weight: $microformat-summary-font-weight; }

      abbr {
        cursor: $cursor-default-value;
        text-decoration: $microformat-abbr-font-decoration;
        font-weight: $microformat-abbr-font-weight;
        border: none;
        padding: $microformat-abbr-padding;
      }
    }


    @media #{$medium-up} {
      h1,h2,h3,h4,h5,h6 { line-height: $header-line-height; }
      h1 { font-size: $h1-font-size; }
      h2 { font-size: $h2-font-size; }
      h3 { font-size: $h3-font-size; }
      h4 { font-size: $h4-font-size; }
      h5 { font-size: $h5-font-size; }
      h6 { font-size: $h6-font-size; }      
    }

    // Only include these styles if you want them.
    @if $include-print-styles {
      /*
       * Print styles.
       *
       * Inlined to avoid required HTTP connection: www.phpied.com/delay-loading-your-print-css/
       * Credit to Paul Irish and HTML5 Boilerplate (html5boilerplate.com)
      */
      .print-only { display: none !important; }
      @media print {
        * {
          background: transparent !important;
          color: $black !important; /* Black prints faster: h5bp.com/s */
          box-shadow: none !important;
          text-shadow: none !important;
        }

        a,
        a:visited { text-decoration: underline;}
        a[href]:after { content: " (" attr(href) ")"; }

        abbr[title]:after { content: " (" attr(title) ")"; }

        // Don't show links for images, or javascript/internal links
        .ir a:after,
        a[href^="javascript:"]:after,
        a[href^="#"]:after { content: ""; }

        pre,
        blockquote {
          border: 1px solid $aluminum;
          page-break-inside: avoid;
        }

        thead { display: table-header-group; /* h5bp.com/t */ }

        tr,
        img { page-break-inside: avoid; }

        img { max-width: 100% !important; }

        @page { margin: 0.5cm; }

        p,
        h2,
        h3 {
          orphans: 3;
          widows: 3;
        }

        h2,
        h3 { page-break-after: avoid; }

        .hide-on-print { display: none !important; }
        .print-only { display: block !important; }
        .hide-for-print { display: none !important; }
        .show-for-print { display: inherit !important; }
      }
    }

  }
}